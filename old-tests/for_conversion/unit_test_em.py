#! /usr/bin/env python
""" A unit test script to help with test-driven development of my new 
    EXPECTation MAXimisation method
"""
from chronostar.retired import expectmax as em
import numpy as np
import pdb

def check_columns():
    """ Check that the columns of the membership table sum to the weights
        of the group generated by the fitted model
    """
    return False

def check_rows(Z):
    """ Check that the rows of the membership table sum to 1.000
    """
    return np.max(np.sum(Z,axis=0)) - 1.0 <= 1e-10

def check_lnlike():
    both_tb = "data/TWA_BPMG_traceback_25Myr.pkl"
    twa_tb  = "data/TWA_core_traceback_15Myr.pkl"

    both_params = em.read_stars(both_tb)
    twa_params = em.read_stars(twa_tb)
    
    return False

def main():
    """ Take the data, take a number of free groups and number of bg groups
        Use EM to find the best fitting groups along with a membership list.
        (**maybe** return some results for data analysis...)
    """
    both_tb = "data/TWA_BPMG_traceback_25Myr.pkl"
    twa_tb  = "data/TWA_core_traceback_15Myr.pkl"    
    bpmg_tb = "data/BPMG_traceback_165Myr.pkl"    

    nTWAstars = 38
    nBPMGstars = 31

    burnin = 500
    steps  = 1000

    dummy_model = [0.0,0.0,0.0,0.0,0.0,0.0,
                   0.1,0.1,0.1,
                   0.4,
                   0.0,0.0,0.0,
                   0.5]

    # fit to TWA only:
    star_params = em.read_stars(twa_tb)
    dms = np.random.rand(2,len(star_params['xyzuvw']))
    dms = dms / np.sum(dms, axis=0)
    try:
        assert check_rows(dms)
    except:
        pdb.set_trace()

    best_fit, samples, lnprob =\
        em.run_group_fit(burnin,steps,star_params,dms[0],dummy_model)
    print("TWA only:")
    print(best_fit)
    pdb.set_trace()

    # fit to BPMG only:
    star_params = em.read_stars(bpmg_tb)
    dms = np.random.rand(2,len(star_params['xyzuvw']))
    dms = dms / np.sum(dms, axis=0)
    try:
        assert check_rows(dms)
    except:
        pdb.set_trace()
    pdb.set_trace()

    best_fit, samples, lnprob =\
        em.run_group_fit(burnin,steps,star_params,dms[0],dummy_model)
    print("BPMG only:")
    print(best_fit)

    # fit to TWA using joined table
    star_params = em.read_stars(both_tb)
    twabpmg_mem = np.zeros((2,nTWAstars+nBPMGstars))
    twabpmg_mem[0,:nTWAstars] = 1.0
    twabpmg_mem[1,nTWAstars:] = 1.0
    try:
        assert check_rows(twabpmg_mem)
    except:
        pdb.set_trace()
    best_fit, samples, lnprob =\
        em.run_group_fit(burnin,steps,star_params,twabpmg_mem[0],dummy_model)
    print("TWA from joined:")
    print(best_fit)

    # fit to BPMG using joined table
    twabpmg_mem = np.zeros((2,nTWAstars+nBPMGstars))
    twabpmg_mem[0,:nTWAstars] = 1.0
    twabpmg_mem[1,nTWAstars:] = 1.0
    try:
        assert check_rows(twabpmg_mem)
    except:
        pdb.set_trace()

    best_fit, samples, lnprob =\
        em.run_group_fit(burnin,steps,star_params,twabpmg_mem[1],dummy_model)
    print("BPMG from joined:")
    print(best_fit)
    pdb.set_trace()

main()
